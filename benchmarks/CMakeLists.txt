cmake_minimum_required(VERSION 2.8)
project (vpp_benchmarks)

find_package(OpenCV REQUIRED)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/..)
include_directories(/usr/include/eigen3  $ENV{HOME}/local/include)

link_directories($ENV{HOME}/local/lib)
add_definitions(-O3 -std=c++1y -march=native -DNDEBUG)
#add_definitions(-g -fno-omit-frame-pointer) # to profile

if(${CMAKE_CXX_COMPILER} MATCHES ".*clang\\+\\+")
  SET(openmp_lib omp)
  ADD_DEFINITIONS(-fopenmp=libomp)
else(${CMAKE_CXX_COMPILER} MATCHES ".*clang\\+\\+")
  SET(openmp_lib gomp)
  ADD_DEFINITIONS(-fopenmp)
endif(${CMAKE_CXX_COMPILER} MATCHES ".*clang\\+\\+")

set(CMAKE_VERBOSE_MAKEFILE ON)
add_executable(boxNd_iterator boxNd_iterator.cc)
add_executable(iteration_on_domains iteration_on_domains.cc)
add_executable(image_iterations image_iterations.cc)
add_executable(image_add image_add.cc)
add_executable(image_add2 image_add2.cc)
add_executable(box_filter box_filter.cc)
add_executable(box_5x5_filter box_5x5_filter.cc)
add_executable(box_5x5_filter2 box_5x5_filter2.cc)
add_executable(box2d_filter box2d_filter.cc)
add_executable(fast_detector fast_detector.cc)
add_executable(for_fast for_fast.cc)
add_executable(pyrlk_opencv_comparison pyrlk_opencv_comparison.cc)
add_executable(liie liie.cc)
add_executable(distance_transform distance_transform.cc)
#add_executable(lbp lbp.cc)

target_link_libraries(image_iterations ${openmp_lib})
target_link_libraries(image_add ${openmp_lib} opencv_core)
target_link_libraries(image_add2 pthread benchmark ${openmp_lib} opencv_core)
target_link_libraries(box_filter ${openmp_lib})
target_link_libraries(box_5x5_filter ${openmp_lib} opencv_core opencv_imgproc)
target_link_libraries(box_5x5_filter2 pthread ${openmp_lib} opencv_core opencv_imgproc benchmark)
target_link_libraries(box2d_filter ${openmp_lib})
target_link_libraries(fast_detector ${OpenCV_LIBS}  ${openmp_lib} benchmark pthread)
target_link_libraries(for_fast ${OpenCV_LIBS}  ${openmp_lib})
target_link_libraries(pyrlk_opencv_comparison ${OpenCV_LIBS} ${openmp_lib})
target_link_libraries(liie ${openmp_lib})
target_link_libraries(distance_transform ${openmp_lib} ${OpenCV_LIBS} gcov)
#target_link_libraries(lbp ${openmp_lib})
